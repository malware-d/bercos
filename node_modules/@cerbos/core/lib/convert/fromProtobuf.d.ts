import type { Policy as PolicyProtobuf } from "../protobuf/cerbos/policy/v1/policy";
import type { CheckResourcesResponse as CheckResourcesResponseProtobuf, DeleteSchemaResponse, DisablePolicyResponse, EnablePolicyResponse, GetPolicyResponse, GetSchemaResponse, ListPoliciesResponse as ListPoliciesResponseProtobuf, ListSchemasResponse as ListSchemasResponseProtobuf, PlanResourcesResponse as PlanResourcesResponseProtobuf } from "../protobuf/cerbos/response/v1/response";
import type { DisablePoliciesResponse, EnablePoliciesResponse, GetPoliciesResponse, ListPoliciesResponse, ListSchemasResponse, PlanResourcesResponse, Policy } from "../types/external";
import { CheckResourcesResponse } from "../types/external";
import type { DeleteSchemasResponse } from "../types/external/DeleteSchemasResponse";
import type { GetSchemasResponse } from "../types/external/GetSchemasResponse";
export declare function checkResourcesResponseFromProtobuf({ requestId, results, }: CheckResourcesResponseProtobuf): CheckResourcesResponse;
export declare function deleteSchemasResponseFromProtobuf({ deletedSchemas, }: DeleteSchemaResponse): DeleteSchemasResponse;
export declare function disablePoliciesResponseFromProtobuf({ disabledPolicies, }: DisablePolicyResponse): DisablePoliciesResponse;
export declare function enablePoliciesResponseFromProtobuf({ enabledPolicies, }: EnablePolicyResponse): EnablePoliciesResponse;
export declare function getPoliciesResponseFromProtobuf({ policies, }: GetPolicyResponse): GetPoliciesResponse;
/** @internal */
export declare function _policyFromProtobuf({ apiVersion, description, disabled, metadata, variables, policyType, }: PolicyProtobuf): Policy;
export declare function getSchemasResponseFromProtobuf({ schemas, }: GetSchemaResponse): GetSchemasResponse;
export declare function listPoliciesResponseFromProtobuf({ policyIds, }: ListPoliciesResponseProtobuf): ListPoliciesResponse;
export declare function listSchemasResponseFromProtobuf({ schemaIds, }: ListSchemasResponseProtobuf): ListSchemasResponse;
export declare function planResourcesResponseFromProtobuf({ requestId, filter, validationErrors, meta, }: PlanResourcesResponseProtobuf): PlanResourcesResponse;
//# sourceMappingURL=fromProtobuf.d.ts.map